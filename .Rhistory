library(knitr)
library(ggplot2)
library(sf)
library(ggdendro)
library(leaflet)
library(viridisLite)
library(RColorBrewer)
library(dendextend)
library(seqinr)
library(ggfortify)
library(ggplot2)
library(ade4)
library(adegraphics)
library(adegenet)
library(spdep)
library(dartR)
library(csv)
library(gridExtra)
library(stringr)
library(sf)
library(ape)
library(ShortRead)
library(ggmap)
library(tigris)
# if (!requireNamespace("BiocManager", quietly = TRUE))
#    install.packages("BiocManager")
# BiocManager::install("Biostrings", versilibrary(devtools) on = "3.8"
library(Biostrings)
# if (!requireNamespace("BiocManager", quietly=TRUE))
# install.packages("BiocManager")
# BiocManager::install("msa")
library(msa)
# if (!requireNamespace("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
# BiocManager::install("DECIPHER", version = "3.8")
library(DECIPHER)
wn_meta_filtered <- read.csv("../data/metadata/metadata.csv") %>%
select(Scripps.ID, Species, Sample.type, Collection.date, County, Latitude, Longitude)
wn_meta_sum_county <- wn_meta_filtered %>%
group_by(County) %>%
summarize(
n = n()) %>%
ungroup()
wn_meta_sum_county %>%
mutate(County = fct_reorder(County, n)) %>%
ggplot(aes(x = County, y = n)) +
geom_point() +
coord_flip() +
theme_minimal() +
labs(title = "Samples collected by county", x = NULL, y = "# of samples")
wn_meta_sum_species <- wn_meta_filtered %>%
filter(Sample.type == "Tissue") %>%
group_by(Species) %>%
summarize(
n = n()) %>%
ungroup()
wn_meta_sum_species %>%
mutate(Species = fct_reorder(Species, n)) %>%
ggplot(aes(x = Species, y = n)) +
geom_point() +
coord_flip() +
theme_minimal() +
labs(title = "Samples collected by bird species", x = NULL, y = "# of samples")
wn_meta_sum_mosquitos <- wn_meta_filtered %>%
filter(Sample.type == "Pooled mosquitos") %>%
group_by(Species) %>%
summarize(
n = n()) %>%
ungroup()
wn_meta_sum_mosquitos %>%
mutate(Species = fct_reorder(Species, n)) %>%
ggplot(aes(x = Species, y = n)) +
geom_point() +
coord_flip() +
theme_minimal() +
labs(title = "Samples collected by mosquito species", x = NULL, y = "# of samples")
##PCA
wnv_df <- read.csv("../data/wnv_test1.csv")
wnv_df_pca <- wnv_df[c(3:157)] ##ignore the first identifier collumns for PCA
wnv_df_pca <- as.data.frame(wnv_df_pca)
wnv_pca <- prcomp(wnv_df_pca)
wnv_pca_plot <- autoplot(wnv_pca, data = wnv_df, colour = 'Population', frame=TRUE, frame.type='norm', main= "PCA of West Nile Population Structure") +theme_classic() #Run pca (prcomp) and plot grouping by pop data in original dataframe
###Cali Map
ca_base <- counties(state= c("CA"), cb= T, class= "sf")
kern <- ca_base %>%
filter(NAME == "Kern")
kern_county <- geom_sf(data = kern, fill="brown1", alpha=.35)
San_Diego <- ca_base %>%
filter(NAME == "San Diego")
San_Diego_county <- geom_sf(data = San_Diego, fill="darkorchid1", alpha=.35)
Sacramento <- ca_base %>%
filter( NAME=="Sacramento")
Sacramento_county <- geom_sf(data = Sacramento, fill="cyan3", alpha=.35)
county_map <- ggplot() +
geom_sf(data = ca_base, color="grey")+
theme_minimal() +
Sacramento_county +
kern_county +
San_Diego_county
grid.arrange(wnv_pca_plot, county_map, nrow=1)
# import dataset that Rebecca made:
clean_seq <- readDNAStringSet("../data/fasta/clear_wnv_clean.fas")
#import metadata
metadataframe <- read_csv('../data/metadata/metadata.csv')
metadataframe <- metadataframe %>%
rename_all(tolower)
# unmasked clustering
sdist <- stringDist(as(clean_seq,"DNAStringSet"), method="hamming")
clust <- hclust(sdist, method = "ward.D2")
dend <- as.dendrogram(clust)
dend_data <- dendro_data(dend, type = 'rectangle')
dend <- assign_values_to_leaves_edgePar(dend, value = colors, edgePar = "col") # add colors
library(tidyverse)
library(ggthemes)
library(seqinr)
library(purrr)
library(dplyr)
library(readr)
library(phyloseq)
library(stringr)
library(tidyr)
library(lubridate)
library(forcats)
library(tigris)
library(knitr)
library(ggplot2)
library(sf)
library(ggdendro)
library(leaflet)
library(viridisLite)
library(RColorBrewer)
library(dendextend)
library(seqinr)
library(ggfortify)
library(ggplot2)
library(ade4)
library(adegraphics)
library(adegenet)
library(spdep)
library(dartR)
library(csv)
library(gridExtra)
library(stringr)
library(sf)
library(ape)
library(ShortRead)
library(ggmap)
library(tigris)
# if (!requireNamespace("BiocManager", quietly = TRUE))
#    install.packages("BiocManager")
# BiocManager::install("Biostrings", versilibrary(devtools) on = "3.8"
library(Biostrings)
# if (!requireNamespace("BiocManager", quietly=TRUE))
# install.packages("BiocManager")
# BiocManager::install("msa")
library(msa)
# if (!requireNamespace("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
# BiocManager::install("DECIPHER", version = "3.8")
library(DECIPHER)
# import dataset that Rebecca made:
clean_seq <- readDNAStringSet("../data/fasta/clear_wnv_clean.fas")
#import metadata
metadataframe <- read_csv('../data/metadata/metadata.csv')
metadataframe <- metadataframe %>%
rename_all(tolower)
# unmasked clustering
sdist <- stringDist(as(clean_seq,"DNAStringSet"), method="hamming")
clust <- hclust(sdist, method = "ward.D2")
dend <- as.dendrogram(clust)
dend_data <- dendro_data(dend, type = 'rectangle')
dend <- assign_values_to_leaves_edgePar(dend, value = colors, edgePar = "col") # add colors
install.packages("msa")
install.packages("msa")
BiocManager::install("msa", version = "3.8")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, error = FALSE, comment = FALSE)
options(readr.show_progress = FALSE)
library(msa)
dend <- assign_values_to_leaves_edgePar(dend, value = colors, edgePar = "col") # add colors
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, error = FALSE, comment = FALSE)
options(readr.show_progress = FALSE)
library(tidyverse)
library(tidyverse)
install.packages(j"sonlite")
install.packages('jsonlite")
install.packages('jsonlite")
install.packages("jsonlite")
library(tidyverse)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, error = FALSE, comment = FALSE)
options(readr.show_progress = FALSE)
library(tidyverse)
library(ggthemes)
library(seqinr)
library(purrr)
library(dplyr)
library(readr)
library(phyloseq)
library(stringr)
library(tidyr)
library(lubridate)
library(forcats)
library(tigris)
library(knitr)
library(ggplot2)
library(sf)
library(ggdendro)
library(leaflet)
library(viridisLite)
library(RColorBrewer)
library(dendextend)
library(seqinr)
library(ggfortify)
library(ggplot2)
library(ade4)
library(adegraphics)
library(adegenet)
library(spdep)
library(dartR)
library(csv)
library(gridExtra)
library(stringr)
library(sf)
library(ape)
library(ShortRead)
library(ggmap)
library(tigris)
# if (!requireNamespace("BiocManager", quietly = TRUE))
#    install.packages("BiocManager")
# BiocManager::install("Biostrings", versilibrary(devtools) on = "3.8"
library(Biostrings)
# if (!requireNamespace("BiocManager", quietly=TRUE))
# install.packages("BiocManager")
# BiocManager::install("msa")
library(msa)
# if (!requireNamespace("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
# BiocManager::install("DECIPHER", version = "3.8")
library(DECIPHER)
wn_meta_filtered <- read.csv("../data/metadata/metadata.csv") %>%
select(Scripps.ID, Species, Sample.type, Collection.date, County, Latitude, Longitude)
wn_meta_sum_county <- wn_meta_filtered %>%
group_by(County) %>%
summarize(
n = n()) %>%
ungroup()
wn_meta_sum_county %>%
mutate(County = fct_reorder(County, n)) %>%
ggplot(aes(x = County, y = n)) +
geom_point() +
coord_flip() +
theme_minimal() +
labs(title = "Samples collected by county", x = NULL, y = "# of samples")
wn_meta_sum_species <- wn_meta_filtered %>%
filter(Sample.type == "Tissue") %>%
group_by(Species) %>%
summarize(
n = n()) %>%
ungroup()
wn_meta_sum_species %>%
mutate(Species = fct_reorder(Species, n)) %>%
ggplot(aes(x = Species, y = n)) +
geom_point() +
coord_flip() +
theme_minimal() +
labs(title = "Samples collected by bird species", x = NULL, y = "# of samples")
wn_meta_sum_mosquitos <- wn_meta_filtered %>%
filter(Sample.type == "Pooled mosquitos") %>%
group_by(Species) %>%
summarize(
n = n()) %>%
ungroup()
wn_meta_sum_mosquitos %>%
mutate(Species = fct_reorder(Species, n)) %>%
ggplot(aes(x = Species, y = n)) +
geom_point() +
coord_flip() +
theme_minimal() +
labs(title = "Samples collected by mosquito species", x = NULL, y = "# of samples")
##PCA
wnv_df <- read.csv("../data/wnv_test1.csv")
wnv_df_pca <- wnv_df[c(3:157)] ##ignore the first identifier collumns for PCA
wnv_df_pca <- as.data.frame(wnv_df_pca)
wnv_pca <- prcomp(wnv_df_pca)
wnv_pca_plot <- autoplot(wnv_pca, data = wnv_df, colour = 'Population', frame=TRUE, frame.type='norm', main= "PCA of West Nile Population Structure") +theme_classic() #Run pca (prcomp) and plot grouping by pop data in original dataframe
###Cali Map
ca_base <- counties(state= c("CA"), cb= T, class= "sf")
kern <- ca_base %>%
filter(NAME == "Kern")
kern_county <- geom_sf(data = kern, fill="brown1", alpha=.35)
San_Diego <- ca_base %>%
filter(NAME == "San Diego")
San_Diego_county <- geom_sf(data = San_Diego, fill="darkorchid1", alpha=.35)
Sacramento <- ca_base %>%
filter( NAME=="Sacramento")
Sacramento_county <- geom_sf(data = Sacramento, fill="cyan3", alpha=.35)
county_map <- ggplot() +
geom_sf(data = ca_base, color="grey")+
theme_minimal() +
Sacramento_county +
kern_county +
San_Diego_county
grid.arrange(wnv_pca_plot, county_map, nrow=1)
# import dataset that Rebecca made:
clean_seq <- readDNAStringSet("../data/fasta/clear_wnv_clean.fas")
#import metadata
metadataframe <- read_csv('../data/metadata/metadata.csv')
metadataframe <- metadataframe %>%
rename_all(tolower)
colors <- metadataframe$color
# unmasked clustering
sdist <- stringDist(as(clean_seq,"DNAStringSet"), method="hamming")
clust <- hclust(sdist, method = "ward.D2")
dend <- as.dendrogram(clust)
dend_data <- dendro_data(dend, type = 'rectangle')
dend <- assign_values_to_leaves_edgePar(dend, value = colors, edgePar = "col") # add colors
plot(dend, leaflab = 'none', horiz = TRUE, axes = FALSE)
knitr::opts_chunk$set(echo = TRUE)
metadataframe <- read_csv('data/metadata/metadata.csv')
metadataframe <- metadataframe %>%
rename_all(tolower)
ca_wnv <- metadataframe %>%
select("species", "collection date",
"county", "latitude", "longitude") %>%
rename_all(funs(str_replace(., "\\s", "_"))) %>%
separate(col = collection_date,
into = c("month", "day", "year"),
sep = "/") %>%
mutate(month = factor(month),
season = fct_collapse(month,
winter = c("12", "1", "2"),
spring = c("3", "4", "5"),
summer = c("6", "7", "8"),
fall = c("9", "10", "11"))) %>%
mutate(latitude = as.numeric(latitude)) %>%
mutate(longitude = as.numeric(longitude)) %>%
na.omit() %>%
mutate(species = fct_lump(species,
n = 4))
species_summary <- ca_wnv %>%
group_by(species) %>%
summarize(species_no = n())
season_summary <- ca_wnv %>%
group_by(season) %>%
summarize(no_infections = n())
kable(species_summary,
col.names = c("Species", "Number Infected"))
kable(season_summary,
col.names = c("Season", "Number of Cases"))
ca_wnv_sf <- st_as_sf(ca_wnv,
coords = c("longitude", "latitude"),
crs = 4269)
ca_counties <- counties(state = 06, cb = TRUE, class = "sf")
co_tracts <- tracts(state = 06, cb = TRUE, class = "sf")
ggplot() +
geom_sf(data = ca_counties, aes(fill = AWATER),
alpha = 0.5) +
geom_sf(data = ca_wnv_sf, aes(color = season,
shape = species)) +
scale_fill_viridis_c(name = "Area of Water") +
facet_wrap(.~season) +
ggtitle("California West Nile Virus Infections") +
xlab("Longitude") +
ylab("Latitude") +
scale_x_continuous()
popup_info <- paste0("<b>Species:</b>  ",
ca_wnv$species, "<br/>",
"<b>Season:</b>  ",
ca_wnv$season, "<br/>",
"<b>Year:</b>  ",
ca_wnv$year)
season_pallet <- colorFactor(brewer.pal(4, "Dark2"),
ca_wnv$season)
leaflet() %>%
addProviderTiles("Esri.NatGeoWorldMap") %>%
addPolygons(data = ca_counties,
group = "tracts") %>%
addCircleMarkers(data = ca_wnv, radius = 2,
lng = ~ longitude, lat = ~ latitude,
popup = popup_info,
color = season_pallet(ca_wnv$season),
group = "infections",
clusterOptions = markerClusterOptions()) %>%
addLayersControl(baseGroups = c("Base Map"),
overlayGroups = c("Tracts", "Infections"))
#Tidy data for county map with infections by season
metadata_url <- paste0("https://raw.githubusercontent.com/aeriel-belk/NSCI535-westnile-omics/master/metadata/metadata.csv")
metaframe <- read_csv("../data/metadata/metadata.csv")
metaframe <- metaframe %>%
rename_all(tolower)
ca_wnv <- metaframe %>%
select("species", "collection date",
"county", "latitude", "longitude") %>%
rename_all(funs(str_replace(., "\\s", "_"))) %>%
separate(col = collection_date,
into = c("month", "day", "year"),
sep = "/") %>%
mutate(month = factor(month),
season = fct_collapse(month,
winter = c("12", "1", "2"),
spring = c("3", "4", "5"),
summer = c("6", "7", "8"),
fall = c("9", "10", "11"))) %>%
mutate(latitude = as.numeric(latitude)) %>%
mutate(longitude = as.numeric(longitude)) %>%
na.omit() %>%
mutate(species = fct_lump(species,
n = 4))
#Table summary of infections by season/species
species_summary <- ca_wnv %>%
group_by(species) %>%
summarize(species_no = n())
season_summary <- ca_wnv %>%
group_by(season) %>%
summarize(no_infections = n())
kable(species_summary,
col.names = c("Species", "Number Infected"))
kable(season_summary,
col.names = c("Season", "Number of Cases"))
#Creating CA sf boundaries
ca_wnv_sf <- st_as_sf(ca_wnv,
coords = c("longitude", "latitude"),
crs = 4269)
ca_counties <- counties(state = 06, cb = TRUE, class = "sf")
co_tracts <- tracts(state = 06, cb = TRUE, class = "sf")
#Plot to show relation of infections to water area
ggplot() +
geom_sf(data = ca_counties, aes(fill = AWATER),
alpha = 0.5) +
geom_sf(data = ca_wnv_sf, aes(color = season,
shape = species)) +
scale_fill_viridis_c(name = "Area of Water") +
facet_wrap(.~season) +
ggtitle("California West Nile Virus Infections") +
xlab("Longitude") +
ylab("Latitude") +
scale_x_continuous()
#Leaflet graph
popup_info <- paste0("<b>Species:</b>  ",
ca_wnv$species, "<br/>",
"<b>Season:</b>  ",
ca_wnv$season, "<br/>",
"<b>Year:</b>  ",
ca_wnv$year)
season_pallet <- colorFactor(brewer.pal(4, "Dark2"),
ca_wnv$season)
leaflet() %>%
addProviderTiles("Esri.NatGeoWorldMap") %>%
addPolygons(data = ca_counties,
group = "tracts") %>%
addCircleMarkers(data = ca_wnv, radius = 2,
lng = ~ longitude, lat = ~ latitude,
popup = popup_info,
color = season_pallet(ca_wnv$season),
group = "infections",
clusterOptions = markerClusterOptions()) %>%
addLayersControl(baseGroups = c("Base Map"),
overlayGroups = c("Tracts", "Infections"))
wn_meta_sum_county
wn_meta_sum_county %>%
mutate(County = fct_reorder(County, n)) %>%
ggplot(aes(x = County, y = n)) +
geom_point() +
coord_flip() +
theme_minimal() +
labs(title = "Samples collected by county", x = NULL, y = "# of samples")
wn_meta_sum_species %>%
mutate(Species = fct_reorder(Species, n)) %>%
ggplot(aes(x = Species, y = n)) +
geom_point() +
coord_flip() +
theme_minimal() +
labs(title = "Samples collected by bird species", x = NULL, y = "# of samples")
ggplot() +
geom_sf(data = ca_counties, aes(fill = AWATER),
alpha = 0.5) +
geom_sf(data = ca_wnv_sf, aes(color = season,
shape = species)) +
scale_fill_viridis_c(name = "Area of Water") +
facet_wrap(.~season) +
ggtitle("California West Nile Virus Infections") +
xlab("Longitude") +
ylab("Latitude") +
scale_x_continuous()
leaflet() %>%
addProviderTiles("Esri.NatGeoWorldMap") %>%
addPolygons(data = ca_counties,
group = "tracts") %>%
addCircleMarkers(data = ca_wnv, radius = 2,
lng = ~ longitude, lat = ~ latitude,
popup = popup_info,
color = season_pallet(ca_wnv$season),
group = "infections",
clusterOptions = markerClusterOptions()) %>%
addLayersControl(baseGroups = c("Base Map"),
overlayGroups = c("Tracts", "Infections"))
wn_meta_sum_mosquitos %>%
mutate(Species = fct_reorder(Species, n)) %>%
ggplot(aes(x = Species, y = n)) +
geom_point() +
coord_flip() +
theme_minimal() +
labs(title = "Samples collected by mosquito species", x = NULL, y = "# of samples")
```
wn_meta_sum_mosquitos %>%
mutate(Species = fct_reorder(Species, n)) %>%
ggplot(aes(x = Species, y = n)) +
geom_point() +
coord_flip() +
theme_minimal() +
labs(title = "Samples collected by mosquito species", x = NULL, y = "# of samples")
grid.arrange(wnv_pca_plot, county_map, nrow=1)
plot(dend, leaflab = 'none', horiz = TRUE, axes = FALSE)
